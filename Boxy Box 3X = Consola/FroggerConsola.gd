extends "res://ServidorSocket.gd"


var lastmove_x = 25
var lastmove_y = 25

var waiter = false

var x = 24
var y = 45

#este es pacman
var frog = [
			[1,3],[0,0],[1,3],[0,0],[1,3],
			[0,0],[1,3],[1,2],[1,3],[0,0],
			[0,0],[1,3],[1,3],[1,2],[0,0],
			[1,3],[1,3],[1,3],[1,3],[1,3],
			[1,3],[0,0],[0,0],[0,0],[1,3]
			]

var x_car = 1
var y_car = 17
var direccion = 0 # 0 derecha / 1 izquierda
var carro = [
			[1,8],[1,8],[1,6],[0,0],[0,0],
			[1,6],[1,6],[1,6],[1,6],[0,0],
			[1,4],[0,0],[0,0],[1,4],[0,0],
			[0,0],[0,0],[0,0],[0,0],[0,0],
			[0,0],[0,0],[0,0],[0,0],[0,0]
			]


var mapa = [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 7, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 7, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 5, 8, 6, 4, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 5, 8, 6, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 6, 6, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 6, 4, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 4, 15, 15, 15, 15, 15, 15, 15, 15, 15, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 15, 15, 15, 15, 15, 15, 15, 15, 15, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 4, 5, 5, 16, 5, 5, 9, 5, 8, 6, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 13, 13, 13, 13, 6], [6, 13, 13, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 8, 6, 4, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 13, 13, 13, 13, 6], [6, 13, 13, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 6, 6, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 11, 12, 11, 12, 11, 6], [12, 11, 12, 11, 12, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 6, 6, 5, 5, 4, 6, 6, 6, 6, 6, 7, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 12, 11, 12, 11, 12, 6], [11, 12, 11, 12, 11, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 6, 5, 5, 4, 6, 6, 6, 6, 6, 7, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 11, 12, 11, 12, 11, 6], [12, 11, 12, 11, 12, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 6, 4, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 12, 11, 12, 11, 12, 6], [11, 12, 11, 12, 11, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 11, 12, 11, 12, 11, 6], [12, 11, 12, 11, 12, 13, 13, 1, 1, 1, 1, 2, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 7, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 12, 11, 12, 11, 12, 6], [11, 12, 11, 12, 11, 13, 13, 1, 1, 1, 2, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 7, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 11, 12, 11, 12, 11, 6], [12, 11, 12, 11, 12, 13, 13, 1, 1, 1, 1, 2, 1, 1, 1, 4, 5, 8, 6, 4, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 12, 11, 12, 11, 12, 6], [11, 12, 11, 12, 11, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 8, 6, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 11, 12, 11, 12, 11, 6], [6, 13, 13, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 6, 6, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 13, 13, 13, 13, 6], [6, 13, 13, 13, 13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 6, 4, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 13, 13, 13, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 15, 15, 15, 15, 15, 15, 15, 15, 15, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 16, 5, 5, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 15, 15, 15, 15, 15, 15, 15, 15, 15, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 16, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 8, 6, 4, 5, 4, 6, 6, 7, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 8, 6, 5, 5, 4, 6, 6, 7, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 9, 5, 6, 6, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 7, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 6, 4, 5, 4, 6, 6, 6, 6, 6, 6, 6, 7, 6, 4, 5, 5, 5, 16, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 16, 5, 5, 9, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 5, 5, 5, 5, 5, 5, 5, 4, 12, 12, 12, 13, 6], [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]

func _ready():
	_init()
	socketpantalla.put_var(["frogger",frog,mapa,carro])
	socketpantalla.put_var(["moverse",x,y,11,6,0,x,y])
	socketpantalla.put_var(["moverse",x_car,y_car,11,6,1,x_car,y_car])


func _process(_delta):
	#revisamos si ya llegamos a la meta
	if x <= 30 and x >= 23 and y <= 4 and y <= 1:
		socketpantalla.put_var(["set_fondo",get_parent().default])
		quit()
	
	if waiter == false:
		waiter = true
		mover_carro()
		#print("a")
		yield(get_tree().create_timer(0.12), "timeout")
		waiter = false
	
	if(socket.get_available_packet_count() > 0):
			var data = socket.get_var()

			if(data[0] == "quit"):
				socketpantalla.put_var(["set_fondo",get_parent().default])
				yield(get_tree().create_timer(2), "timeout")
				quit()
			
			#recibir confirmacion de movimiento
			if (data[0] == "colision"):
				arreglar_pos()
				
			#recibimos los inputs
			if (data[0] == "arriba"):
				mover_personaje(1)
			elif (data[0] == "abajo"):
				mover_personaje(2)
			elif (data[0] == "izquierda"):
				mover_personaje(3)
			elif (data[0] == "derecha"):
				mover_personaje(4)
	

func mover_carro():
	var xt = x_car
	var yt = y_car
	if direccion == 0:
		x_car+=1
		if x_car == 46:
			direccion = 1
		socketpantalla.put_var(["moverse",x_car,y_car,11,6,1,xt,yt])
	elif direccion == 1:
		x_car -=1
		if x_car == 1:
			direccion = 0
		socketpantalla.put_var(["moverse",x_car,y_car,11,6,1,xt,yt])

func mover_personaje(dir):
	var xt = x
	var yt = y
	
	if dir ==1:
		lastmove_x = x
		lastmove_y = y
		y -= 3
	elif dir == 2:
		lastmove_x = x
		lastmove_y = y
		y += 3
	elif dir == 3:
		lastmove_x = x
		lastmove_y = y
		x += 3
	elif dir == 4:
		lastmove_x = x
		lastmove_y = y
		x -= 3
	else:
		return
	socketpantalla.put_var(["moverse",x,y,11,6,0,xt,yt]) #11 color de bolas y 6 de colision


func arreglar_pos():
	x = 24
	y = 45
	socketpantalla.put_var(["moverse",x,y,11,6,0,x,y])
	pass

